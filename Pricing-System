<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>LemonRealm Renewal + Agreement</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --yellow: #ffe642;
      --lime: #d3ff62;
      --navy: #060b14;
      --text: #ffffff;
      --muted: rgba(255,255,255,0.6);
      --badge-bg: #ffe642;
      --badge-color: #000;
      --modal-padding: 32px;
      --out-of-stock-opacity: 0.4;
      --overlay-z: 9999;
    }
    body {
      margin: 0;
      font-family: "Inter", sans-serif;
      background: radial-gradient(circle at 25% 25%, #0b1526, var(--navy) 80%);
      color: var(--text);
      overflow-x: hidden;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-start;
      padding: 60px 20px;
    }
    h1 {
      font-size: 4rem;
      color: var(--text);
      margin: 0;
      text-align: center;
      margin-bottom: 20px;
    }
    .info-text {
      max-width: 800px;
      text-align: center;
      color: var(--text);
      font-size: 1rem;
      margin-bottom: 32px;
      line-height: 1.4;
    }
    .mini-logos {
      display: flex;
      justify-content: center;
      gap: 15px;
      margin-bottom: 40px;
      flex-wrap: wrap;
    }
    .mini-logos img {
      width: 24px;
      height: 24px;
      filter: invert(1);
    }
    .device-tiles-wrapper {
      width: 100%;
      max-width: 800px;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 40px;
    }
    .device-tiles {
      display: flex;
      gap: 16px;
    }
    .device-tile {
      padding: 6px 12px;
      border: 1px solid rgba(255,255,255,0.3);
      border-radius: 6px;
      cursor: pointer;
      color: var(--text);
      font-size: 0.85rem;
      font-weight: 600;
      transition: 0.2s;
      position: relative;
      white-space: nowrap;
    }
    .device-tile.active {
      background: var(--lime);
      color: #000;
      border-color: var(--yellow);
    }
    .device-tile.inactive {
      opacity: 0.4;
    }
    .device-tile .badge-off {
      position: absolute;
      top: -10px;
      right: -6px;
      background: var(--badge-bg);
      color: var(--badge-color);
      font-size: 0.65rem;
      padding: 2px 4px;
      border-radius: 4px;
      pointer-events: none;
    }
    .grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
      gap: 30px;
      width: 100%;
      max-width: 1100px;
      margin-bottom: 60px;
    }
    .card {
      background: rgba(255,255,255,0.05);
      border: 1px solid rgba(255,255,255,0.1);
      border-bottom: 4px solid var(--yellow);
      border-radius: 18px;
      padding: 50px 40px;
      box-shadow: inset 0 0 0 1px rgba(255,255,255,0.04);
      transition: .3s;
      cursor: pointer;
      position: relative;
    }
    .card:hover {
      transform: translateY(-4px);
      border-color: var(--lime);
    }
    .card.out-of-stock {
      opacity: var(--out-of-stock-opacity);
      cursor: default;
    }
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .plan-name {
      font-weight: 700;
      font-size: 1.3rem;
      color: var(--text);
    }
    .icon {
      font-size: 22px;
      color: rgba(255,255,255,0.25);
    }
    .users-line {
      margin-top: 8px;
      font-size: 0.85rem;
      color: var(--muted);
      display: flex;
      align-items: center;
      justify-content: flex-start;
    }
    .users-line .fa-users {
      margin-right: 4px;
      font-size: 0.9rem;
      color: var(--muted);
    }
    .users-line .stock-label {
      display: block;
      margin-top: 4px;
      font-size: 0.75rem;
      color: var(--muted);
    }
    .price {
      margin-top: 25px;
      display: flex;
      align-items: baseline;
    }
    .price .dollar {
      font-size: 2.2rem;
      font-weight: 300;
      color: var(--text);
    }
    .price .amount {
      font-size: 2.8rem;
      font-weight: 700;
      color: var(--text);
    }
    .price .cents {
      font-size: 1rem;
      font-weight: 700;
      transform: translateY(-4px);
      color: var(--text);
    }
    .price .usd {
      margin-left: 8px;
      font-size: .9rem;
      color: var(--muted);
    }
    .overlay {
      position: fixed;
      inset: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      background: rgba(0,0,0,0.7);
      backdrop-filter: blur(10px);
      z-index: var(--overlay-z);
      padding: 20px;
      box-sizing: border-box;
    }
    .overlay.hidden {
      display: none;
    }
    .overlay-content {
      padding: var(--modal-padding);
      border-radius: 20px;
      background: rgba(255,255,255,0.05);
      border: 1px solid rgba(255,255,255,0.1);
      text-align: center;
      max-width: 480px;
      width: 100%;
      box-sizing: border-box;
      color: var(--text);
    }
    .overlay-content h2 {
      color: var(--text);
      margin: 0 0 12px 0;
    }
    .overlay-content p {
      color: var(--text);
      margin: 0 0 20px 0;
    }
    .overlay-content input {
      margin-top: 12px;
      padding: 12px 18px;
      border: none;
      border-radius: 8px;
      background: rgba(255,255,255,0.1);
      color: var(--text);
      width: 100%;
      max-width: 300px;
      box-sizing: border-box;
    }
    .overlay-content button {
      margin-top: 20px;
      padding: 10px 22px;
      border: none;
      border-radius: 8px;
      background: linear-gradient(90deg, var(--lime), var(--yellow));
      color: #000;
      font-weight: 600;
      cursor: pointer;
      width: auto;
    }
    .error {
      margin-top: 15px;
      color: #ff7373;
    }
    .back-btn {
      display: inline-flex;
      align-items: center;
      gap: 6px;
      background: rgba(255,255,255,0.1);
      border: 1px solid rgba(255,255,255,0.2);
      border-radius: 8px;
      padding: 6px 10px;
      cursor: pointer;
      color: var(--text);
      font-size: 0.9rem;
      margin-bottom: 20px;
      transition: .3s;
    }
    .back-btn:hover {
      background: rgba(255,255,255,0.2);
    }
    .total-box {
      margin: 20px auto;
      padding: 12px 20px;
      background: linear-gradient(90deg, var(--lime), var(--yellow));
      border-radius: 10px;
      display: inline-block;
      color: #000;
      font-size: 1.25rem;
      font-weight: 600;
    }
    .payments {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 20px;
      margin-top: 20px;
    }
    .pay-card {
      background: rgba(255,255,255,0.05);
      border: 1px solid rgba(255,255,255,0.1);
      border-radius: 14x; /* typo fixed below if needed */
      border-radius: 14px;
      padding: 26px;
      text-align: center;
      position: relative;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      transition: 0.3s;
      cursor: pointer;
    }
    .pay-card:hover {
      border-color: var(--lime);
      transform: translateY(-3px);
    }
    .pay-card img {
      width: 38px;
      height: 38px;
      filter: invert(1);
    }
    .pay-card span {
      display: block;
      font-size: 0.9rem;
      color: var(--text);
      margin-top: 8px;
      font-weight: 500;
    }
    .pay-card.unavailable {
      opacity: 0.35;
      cursor: default;
    }
    .pay-card .tag {
      margin-top: 6px;
      font-size: .75rem;
      color: rgba(255,255,255,0.6);
    }
    .pay-card .bonus {
      margin-top: 6px;
      font-size: .8rem;
      color: var(--lime);
      font-weight: 600;
    }

    /* Restore iOS-style switch (toggle) for agreement */
    .agreement-content {
      margin-bottom: 16px;
      text-align: left;
    }
    .agreement-content .agreement-rule {
      display: flex;
      align-items: center;
      margin-bottom: 12px;
      font-size: 0.9rem;
      color: var(--text);
    }
    .agreement-content .agreement-toggle {
      position: relative;
      width: 50px;
      height: 28px;
      margin-right: 12px;
      flex-shrink: 0;
    }
    .agreement-content .agreement-toggle input {
      display: none;
    }
    .agreement-content .agreement-slider {
      position: absolute;
      cursor: pointer;
      background-color: #555;
      border-radius: 34px;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      transition: 0.4s;
    }
    .agreement-content .agreement-slider::before {
      position: absolute;
      content: "";
      height: 22px;
      width: 22px;
      left: 3px;
      bottom: 3px;
      background-color: white;
      border-radius: 50%;
      transition: 0.4s;
      box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    }
    .agreement-content input:checked + .agreement-slider {
      background-color: #4cd964;
    }
    .agreement-content input:checked + .agreement-slider::before {
      transform: translateX(22px);
    }
    .agreement-links {
      margin-top: 12px;
    }
    .agreement-links a {
      display: inline-block;
      background-color: var(--lime);
      color: #000;
      text-decoration: none;
      padding: 12px 20px;
      border-radius: 8px;
      transition: 0.3s;
    }
    .agreement-links a:hover {
      background-color: var(--yellow);
    }
    .agreement-message {
      margin-top: 12px;
      color: #ff7373;
      font-weight: 600;
      display: none;
    }
    @media (max-width: 600px) {
      .agreement-content .agreement-rule {
        font-size: 0.85rem;
      }
      h1 {
        font-size: 3rem;
      }
      .overlay-content {
        padding: 24px;
      }
    }
  </style>
</head>
<body>
  <h1>Pricing</h1>
  <div class="info-text">
    Each device requires its own account. For example, 2 devices = 2 accounts. We offer <strong>15% off</strong> on the total when multiple devices are selected.
  </div>
  <div class="mini-logos">
    <img src="https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/visa.svg" alt="Visa">
    <img src="https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/paypal.svg" alt="PayPal">
    <img src="https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/cashapp.svg" alt="Cash App">
    <img src="https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/revolut.svg" alt="Revolut">
    <img src="https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/wise.svg" alt="Wise">
    <img src="https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/bitcoin.svg" alt="Crypto">
  </div>
  <div class="device-tiles-wrapper">
    <div class="device-tiles">
      <div class="device-tile" data-count="1">1 Device ~ 1 Account</div>
      <div class="device-tile" data-count="2">2 Devices ~ 2 Accounts</div>
      <div class="device-tile" data-count="3">3 Devices ~ 3 Accounts</div>
      <div class="device-tile" data-count="4">4 Devices ~ 4 Accounts</div>
    </div>
  </div>
  <div class="grid">
    <div class="card" data-plan="1 Month" data-price="14.99">
      <div class="header">
        <div class="plan-name">1 Month</div>
        <i class="fa-solid fa-seedling icon"></i>
      </div>
      <div class="users-line"><i class="fa-solid fa-users"></i><span class="sub-count">16,349 users</span></div>
      <div class="price"><span class="dollar">$</span><span class="amount">14</span><span class="cents">.99</span><span class="usd">USD</span></div>
    </div>
    <div class="card" data-plan="3 Months" data-price="39.99">
      <div class="header">
        <div class="plan-name">3 Months</div>
        <i class="fa-solid fa-cloud-sun icon"></i>
      </div>
      <div class="users-line"><i class="fa-solid fa-users"></i><span class="sub-count">12,874 users</span></div>
      <div class="price"><span class="dollar">$</span><span class="amount">39</span><span class="cents">.99</span><span class="usd">USD</span></div>
    </div>
    <div class="card" data-plan="6 Months" data-price="69.99">
      <div class="header">
        <div class="plan-name">6 Months</div>
        <i class="fa-solid fa-mountain-sun icon"></i>
      </div>
      <div class="users-line"><i class="fa-solid fa-users"></i><span class="sub-count">9,512 users</span></div>
      <div class="price"><span class="dollar">$</span><span class="amount">69</span><span class="cents">.99</span><span class="usd">USD</span></div>
    </div>
    <div class="card" data-plan="1 Year" data-price="99.99">
      <div class="header">
        <div class="plan-name">1 Year</div>
        <i class="fa-solid fa-plane-up icon"></i>
      </div>
      <div class="users-line"><i class="fa-solid fa-users"></i><span class="sub-count">7,865 users</span></div>
      <div class="price"><span class="dollar">$</span><span class="amount">99</span><span class="cents">.99</span><span class="usd">USD</span></div>
    </div>
    <div class="card" data-plan="3 Years" data-price="299">
      <div class="header">
        <div class="plan-name">3 Years</div>
        <i class="fa-solid fa-rocket icon"></i>
      </div>
      <div class="users-line"><i class="fa-solid fa-users"></i><span class="sub-count">4,230 users</span></div>
      <div class="price"><span class="dollar">$</span><span class="amount">299</span><span class="cents">.00</span><span class="usd">USD</span></div>
    </div>
    <div class="card out-of-stock" data-plan="Lifetime" data-price="599">
      <div class="header">
        <div class="plan-name">Lifetime</div>
        <i class="fa-solid fa-infinity icon"></i>
      </div>
      <div class="users-line"><i class="fa-solid fa-users"></i><span class="sub-count">1,102 users</span></div>
      <div class="users-line"><span class="stock-label">Currently out of stock</span></div>
      <div class="price"><span class="dollar">$</span><span class="amount">599</span><span class="cents">.00</span><span class="usd">USD</span></div>
    </div>
  </div>

  <div id="verifyStep" class="overlay hidden">
    <div class="overlay-content">
      <div class="back-btn" id="goBack"><i class="fa-solid fa-arrow-left"></i> Go Back</div>
      <h2>Please verify your account</h2>
      <p>Enter your username or email to continue</p>
      <input id="verifyInput" type="text" placeholder="Enter username or email">
      <button id="renewBtn"><i class="fa-solid fa-rotate"></i> Renew</button>
      <div id="verifyError" class="error"></div>
    </div>
  </div>

  <div id="agreementStep" class="overlay hidden">
    <div class="overlay-content">
      <div class="back-btn" id="agreeGoBack"><i class="fa-solid fa-arrow-left"></i> Go Back</div>
      <h2>Customer Agreement</h2>
      <div class="agreement-content">
        <div class="agreement-rule">
          <label class="agreement-toggle">
            <input type="checkbox" class="agreement-checkbox">
            <span class="agreement-slider"></span>
          </label>
          This is IPTV. Occasional maintenance (once or twice a year) is normal and service is always restored quickly.
        </div>
        <div class="agreement-rule">
          <label class="agreement-toggle">
            <input type="checkbox" class="agreement-checkbox">
            <span class="agreement-slider"></span>
          </label>
          Buffering is usually caused by your ISP throttling IPTV traffic. Speed tests may look fine but won’t show throttling. Use a free VPN + VPN playlist if needed.
        </div>
        <div class="agreement-rule">
          <label class="agreement-toggle">
            <input type="checkbox" class="agreement-checkbox">
            <span class="agreement-slider"></span>
          </label>
          If your ISP blocks the IPTV domain/URL, we’ll provide a new one. (This resets your playlist history & favorites.)
        </div>
        <div class="agreement-rule">
          <label class="agreement-toggle">
            <input type="checkbox" class="agreement-checkbox">
            <span class="agreement-slider"></span>
          </label>
          One account = one device at a time. For multiple devices, we offer 15% off additional accounts.
        </div>
        <div class="agreement-rule">
          <label class="agreement-toggle">
            <input type="checkbox" class="agreement-checkbox">
            <span class="agreement-slider"></span>
          </label>
          We are not responsible if your IPTV player is slow or paid. Our service works best with TiviMate.
        </div>
        <div class="agreement-rule">
          <label class="agreement-toggle">
            <input type="checkbox" class="agreement-checkbox">
            <span class="agreement-slider"></span>
          </label>
          We provide a premium backup EPG (TV Guide) if your app supports multiple EPGs.
        </div>
        <div class="agreement-rule">
          <label class="agreement-toggle">
            <input type="checkbox" class="agreement-checkbox">
            <span class="agreement-slider"></span>
          </label>
          If a channel or movie stops working, we will update and fix it as fast as possible.
        </div>
        <div class="agreement-rule">
          <label class="agreement-toggle">
            <input type="checkbox" class="agreement-checkbox">
            <span class="agreement-slider"></span>
          </label>
          Refund Policy: We do not offer refunds for any of the above reasons — including ISP throttling, blocked domains, player issues, or normal maintenance. If unsure, please request more trial time.
        </div>
      </div>
      <div class="agreement-links">
        <a href="#" id="agreeProceed">Agree & Continue</a>
      </div>
      <div class="agreement-message" id="agreementMessage">
        You must agree to all terms to proceed.
      </div>
    </div>
  </div>

  <div id="paymentStep" class="overlay hidden">
    <div class="overlay-content">
      <div class="back-btn" id="goBack2"><i class="fa-solid fa-arrow-left"></i> Go Back</div>
      <h2>Choose your payment method</h2>
      <div class="total-box" id="totalDisplay">Your total is: $0.00 USD</div>
      <div class="payments">
        <div class="pay-card" data-url="https://www.visa.co.uk/">
          <img src="https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/visa.svg" alt="Visa">
          <span>Visa</span>
        </div>
        <div class="pay-card" data-url="https://www.paypal.com/">
          <img src="https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/paypal.svg" alt="PayPal">
          <span>PayPal</span>
        </div>
        <div class="pay-card" data-url="https://www.cashapp.com/">
          <img src="https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/cashapp.svg" alt="Cash App">
          <span>Cash App</span>
        </div>
        <div class="pay-card unavailable" data-url="https://www.revolut.com/">
          <img src="https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/revolut.svg" alt="Revolut">
          <span>Revolut</span>
          <div class="tag">Unavailable</div>
        </div>
        <div class="pay-card" data-url="https://www.wise.com/">
          <img src="https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/wise.svg" alt="Wise">
          <span>Wise</span>
        </div>
        <div class="pay-card" data-url="https://www.coinbase.com/">
          <img src="https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/bitcoin.svg" alt="Crypto">
          <span>Crypto</span>
          <div class="bonus">+1 Month Free</div>
        </div>
      </div>
    </div>
  </div>

  <script>
    let selectedPlan = null;
    let selectedDevices = 1;
    let selectedPayCard = null;

    const SUB_KEY = 'lr_sub_counts';
    const baseInitial = {
      '1 Month': 16349,
      '3 Months': 12874,
      '6 Months': 9512,
      '1 Year': 7865,
      '3 Years': 4230,
      'Lifetime': 1102
    };

    function loadSubscriberCounts() {
      const s = localStorage.getItem(SUB_KEY);
      if (s) {
        try {
          return JSON.parse(s);
        } catch(e) {}
      }
      return { ...baseInitial };
    }
    function saveSubscriberCounts(o) {
      localStorage.setItem(SUB_KEY, JSON.stringify(o));
    }

    let subscriberCounts = loadSubscriberCounts();

    function updateSubscriberDisplays() {
      document.querySelectorAll('.card').forEach(card => {
        const plan = card.dataset.plan;
        const spanEl = card.querySelector('.sub-count');
        if (spanEl && subscriberCounts[plan] !== undefined) {
          let displayNum = subscriberCounts[plan];
          if (selectedDevices > 1) {
            const factorMap = {2: 0.6, 3: 0.45, 4: 0.3};
            const factor = factorMap[selectedDevices] || 1;
            displayNum = Math.floor(subscriberCounts[plan] * factor);
          }
          spanEl.textContent = displayNum.toLocaleString() + ' users';
        }
      });
    }

    function incrementSubscribers() {
      Object.keys(subscriberCounts).forEach(plan => {
        if (plan === 'Lifetime') {
          subscriberCounts[plan] += getRandomInt(1, 5);
        } else {
          subscriberCounts[plan] += getRandomInt(2, 11);
        }
      });
      saveSubscriberCounts(subscriberCounts);
      updateSubscriberDisplays();
    }

    function getRandomInt(min, max) {
      return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    function startSubscriberTimer() {
      setTimeout(() => {
        incrementSubscribers();
        setInterval(incrementSubscribers, 120000);
      }, 120000);
    }

    document.querySelectorAll('.device-tile').forEach(tile => {
      tile.addEventListener('click', () => {
        const c = parseInt(tile.dataset.count);
        selectDevice(c);
      });
    });

    function selectDevice(count) {
      selectedDevices = count;
      document.querySelectorAll('.device-tile').forEach(tile => {
        const c = parseInt(tile.dataset.count);
        tile.classList.remove('active', 'inactive');
        if (c === count) {
          tile.classList.add('active');
        } else {
          tile.classList.add('inactive');
        }
        const existing = tile.querySelector('.badge-off');
        if (existing) existing.remove();
        if (c > 1) {
          const badge = document.createElement('span');
          badge.className = 'badge-off';
          badge.textContent = '‑15% OFF';
          tile.appendChild(badge);
        }
      });
      recalcPrices();
      updateSubscriberDisplays();
    }

    function recalcPrices() {
      document.querySelectorAll('.card').forEach(card => {
        const base = parseFloat(card.dataset.price);
        let total = base;
        if (selectedDevices > 1) {
          total = base * selectedDevices * 0.85;
        }
        const dollars = Math.floor(total);
        const cents = Math.round((total - dollars) * 100);
        const centsStr = cents < 10 ? "0" + cents : "" + cents;
        const de = card.querySelector('.amount');
        const ce = card.querySelector('.cents');
        de.textContent = dollars;
        ce.textContent = "." + centsStr;
      });
    }

    document.addEventListener('click', async (e) => {
      const card = e.target.closest('.card');
      if (card && !card.classList.contains('out-of-stock')) {
        const amt = parseInt(card.querySelector('.amount').textContent);
        const centsText = card.querySelector('.cents').textContent || "";
        let centsNum = 0;
        if (centsText.startsWith(".")) {
          centsNum = parseFloat(centsText);
        }
        const price = amt + centsNum;
        selectedPlan = { name: card.dataset.plan, price: price };
        document.getElementById('verifyStep').classList.remove('hidden');
      }

      if (e.target.closest('#renewBtn')) {
        const val = document.getElementById('verifyInput').value.trim();
        const err = document.getElementById('verifyError');
        err.textContent = "";
        if (!val) {
          err.textContent = "Please enter something.";
          return;
        }
        try {
          const sheetURL = "https://docs.google.com/spreadsheets/d/1wrHsnDWLNQERk2j5E6TLkxwvz319F4NO4voJCvsRQsE/gviz/tq?tqx=out:json";
          const res = await fetch("https://lemonrealm.com/?renew_proxy=1&url=" + encodeURIComponent(sheetURL));
          const text = await res.text();
          const start = text.indexOf('{');
          const end = text.lastIndexOf('}');
          if (start === -1 || end === -1) {
            err.textContent = "Unexpected response";
            return;
          }
          const json = JSON.parse(text.substring(start, end + 1));
          const rows = json.table.rows.map(r => r.c.map(c => c ? c.v : ""));
          let found = false, blacklisted = false;
          rows.forEach(r => {
            const a = r[0]?.toString().toLowerCase();
            const b = r[1]?.toString().toLowerCase();
            const d = r[3]?.toString().toLowerCase();
            const input = val.toLowerCase();
            if (a === input || b === input) {
              found = true;
              if (d && d.includes("black")) blacklisted = true;
            }
          });
          if (!found) {
            err.textContent = "❌ Not found in our records.";
            return;
          }
          if (blacklisted) {
            err.textContent = "🚫 There is an error with your account. Please contact support.";
            return;
          }
          document.getElementById('verifyStep').classList.add('hidden');
          document.getElementById('paymentStep').classList.remove('hidden');
          document.getElementById('totalDisplay').textContent =
            `Your total is: $${selectedPlan.price.toFixed(2)} USD`;
        } catch (ex) {
          err.textContent = "Error connecting to sheet.";
        }
      }

      if (e.target.closest('#goBack')) {
        document.getElementById('verifyStep').classList.add('hidden');
      }
      if (e.target.closest('#goBack2')) {
        document.getElementById('paymentStep').classList.add('hidden');
      }

      const payCard = e.target.closest('.pay-card');
      if (payCard && !payCard.classList.contains('unavailable')) {
        selectedPayCard = payCard;
        document.getElementById('paymentStep').classList.add('hidden');
        document.getElementById('agreementStep').classList.remove('hidden');
      }

      if (e.target.closest('#agreeGoBack')) {
        document.getElementById('agreementStep').classList.add('hidden');
        document.getElementById('paymentStep').classList.remove('hidden');
      }

      if (e.target.closest('#agreeProceed')) {
        const allChecked = Array.from(document.querySelectorAll('.agreement-checkbox')).every(cb => cb.checked);
        const msg = document.getElementById('agreementMessage');
        if (!allChecked) {
          msg.style.display = "block";
          return;
        }
        msg.style.display = "none";
        document.getElementById('agreementStep').classList.add('hidden');
        if (selectedPayCard) {
          const url = selectedPayCard.getAttribute('data-url');
          if (url) {
            window.open(url, "_blank");
          }
        }
      }
    });

    window.addEventListener('DOMContentLoaded', () => {
      selectDevice(1);
      updateSubscriberDisplays();
      startSubscriberTimer();
    });
  </script>
</body>
</html>
